#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "Adafruit_MCP9808.h"
Adafruit_MCP9808 tempsensor = Adafruit_MCP9808();
#define OLED_MOSI   9
#define OLED_CLK   10
#define OLED_DC    11
#define OLED_CS    12
#define OLED_RESET 13
Adafruit_SSD1306 display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);
int gaveHeatWarning = false;
int gaveExtremeHeatWarning = false;
int gaveColdWarning = false;
int gaveExtremeColdWarning = false;
int heat = 100; //change this to the temperature at which it will administrator a regular heat warning
int cold = 32; //change this to the temperature at which it will administrator a regular cold warning
void setup() {
  display.begin(SSD1306_SWITCHCAPVCC);
  display.clearDisplay();
  display.setTextColor(WHITE);
  display.display();
  if (!tempsensor.begin()) {
    Serial.println("Couldn't find MCP9808!");
    while (1);
  }
}

void loop() {
  float c = tempsensor.readTempC();
  float f = c * 9.0 / 5.0 + 32;
  if (f >= heat) {
    if (gaveHeatWarning == false) {
      warn("HEAT");
    }
  }
  else if (f <= cold) {
    if (gaveColdWarning == false) {
      warn("COLD");
    }
  }
  else if (f >= 125) {
    
  }
  else {
    gaveHeatWarning = false;
    gaveExtremeHeatWarning = false;
    gaveColdWarning = false;
    gaveExtremeColdWarning = false;
  }
  showTemp(f);
}

void warn(int type) {
  if (type == "HEAT") {
    gaveHeatWarning = true;
    display.clearDisplay();
    display.drawRect(0, 0, 128, 32, WHITE);
    display.drawLine(0, 8, 128, 8, WHITE);
    display.setCursor(30, 1);
    display.print("HEAT WARNING");
    display.setCursor(2, 10);
    display.print("PLEASE ENABLE FAN TO COOL DOWN SYSTEMS");
    display.display();
    for (int x = 0; x <= 1000; x++) {
      tone(1, x, 3);
    }
    for (int x = 0; x <= 1000; x++) {
      tone(1, x, 3);
    }
    for (int x = 0; x <= 1000; x++) {
      tone(1, x, 3);
    }
    delay(3000);
    display.clearDisplay();
    display.display();
  }
  else if (type == "COLD") {
    gaveColdWarning = true;
    display.clearDisplay();
    display.drawRect(0, 0, 128, 32, WHITE);
    display.drawLine(0, 8, 128, 8, WHITE);
    display.setCursor(30, 1);
    display.print("COLD WARNING");
    display.setCursor(2, 10);
    display.print("PLEASE PLACE THIS DEVICE IN A WARM ENVIORMENT TO AVOID DAMAGE");
    display.display();
    tone(1, 909, 300);
    delay(310);
    tone(1, 909, 300);
    delay(310);
    tone(1, 909, 300);
    delay(3000);
    display.clearDisplay();
    display.display();
  }
  else if (type == "EXTREME COLD") {
    gaveColdWarning = true;
    display.clearDisplay();
    display.drawRect(0, 0, 128, 32, WHITE);
    display.drawLine(0, 8, 128, 8, WHITE);
    display.setCursor(10, 1);
    display.print("EXTREME COLD WARNING");
    display.setCursor(2, 10);
    display.print("FOR YOUR SAFETY AND THE SYSTEMS SAFETY, GET TO A WARM ENVIORMENT");
    display.display();
    tone(1, 2000, 500);
    delay(500);
    tone(1, 500, 500);
    delay(500);
    tone(1, 2000, 500);
    delay(500);
    tone(1, 500, 500);
    delay(3000);
    display.clearDisplay();
    display.display();
  }
  else if (type == "EXTREME HEAT") {
    gaveColdWarning = true;
    display.clearDisplay();
    display.drawRect(0, 0, 128, 32, WHITE);
    display.drawLine(0, 8, 128, 8, WHITE);
    display.setCursor(10, 1);
    display.print("EXTREME HEAT WARNING");
    display.setCursor(2, 10);
    display.print("TO AVOID PERMINENT DAGAME, PLEASE ENABLE FAN. HEAT HAS REACHED DANGEROUSE LEVELS");
    display.display();
    tone(1, 2000, 500);
    delay(500);
    tone(1, 500, 500);
    delay(500);
    tone(1, 2000, 500);
    delay(500);
    tone(1, 500, 500);
    delay(3000);
    display.clearDisplay();
    display.display();
  }
}

void showTemp(int temp) {
  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0, 0);
  display.println("CURRENT TEMPERATURE:");
  display.print(temp); display.print("*F");
  display.display();
}
