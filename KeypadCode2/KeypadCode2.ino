#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_LEDBackpack.h>
#include <Keypad.h>
const byte ROWS = 4;
const byte COLS = 4;
char keys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'0', 'F', 'E', 'D'}
};
char code[4] = {0, 6, 7, 4};
char input[4] = {' ', ' ', ' ', ' '};
int16_t wrong[13] = {'W', 'R', 'O', 'N', 'G', ' ', 'C', 'O', 'D', 'E', ' ', ' ', ' '};
int16_t cleared[10] = {'C', 'L', 'E', 'A', 'R', 'E', 'D', ' ', ' ', ' '};
int16_t correct[10] = {'C', 'O', 'R', 'R', 'E', 'C', 'T', ' ', ' ', ' '};
char scroll[4] = {' ', ' ', ' ', ' '};

byte rowPins[ROWS] = {5, 4, 3, 2};
byte colPins[COLS] = {9, 8, 7, 6};
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );
Adafruit_AlphaNum4 alpha4 = Adafruit_AlphaNum4();
void setup() {
  Serial.begin(9600);
  alpha4.begin(0x70);
  alpha4.clear();
  alpha4.writeDisplay();
}

void loop() {
  char key = keypad.getKey();
  if (key) {
    if (key == 'C') {
      Serial.print("Cleared");
      int c = 0;
      scroll[0] = scroll[1];
      scroll[1] = scroll[2];
      scroll[2] = scroll[3];
      scroll[3] = cleared[c];
      alpha4.writeDigitAscii(3, scroll[3]);
      alpha4.writeDigitAscii(2, scroll[2]);
      alpha4.writeDigitAscii(1, scroll[1]);
      alpha4.writeDigitAscii(0, scroll[0]);
      alpha4.writeDisplay();
      c = c + 1;
      delay(200);
      scroll[0] = scroll[1];
      scroll[1] = scroll[2];
      scroll[2] = scroll[3];
      scroll[3] = cleared[c];
      alpha4.writeDigitAscii(3, scroll[3]);
      alpha4.writeDigitAscii(2, scroll[2]);
      alpha4.writeDigitAscii(1, scroll[1]);
      alpha4.writeDigitAscii(0, scroll[0]);
      alpha4.writeDisplay();
      c = c + 1;
      delay(200);
      scroll[0] = scroll[1];
      scroll[1] = scroll[2];
      scroll[2] = scroll[3];
      scroll[3] = cleared[c];
      alpha4.writeDigitAscii(3, scroll[3]);
      alpha4.writeDigitAscii(2, scroll[2]);
      alpha4.writeDigitAscii(1, scroll[1]);
      alpha4.writeDigitAscii(0, scroll[0]);
      alpha4.writeDisplay();
      c = c + 1;
      delay(200);
      scroll[0] = scroll[1];
      scroll[1] = scroll[2];
      scroll[2] = scroll[3];
      scroll[3] = cleared[c];
      alpha4.writeDigitAscii(3, scroll[3]);
      alpha4.writeDigitAscii(2, scroll[2]);
      alpha4.writeDigitAscii(1, scroll[1]);
      alpha4.writeDigitAscii(0, scroll[0]);
      alpha4.writeDisplay();
      c = c + 1;
      delay(200);
      scroll[0] = scroll[1];
      scroll[1] = scroll[2];
      scroll[2] = scroll[3];
      scroll[3] = cleared[c];
      alpha4.writeDigitAscii(3, scroll[3]);
      alpha4.writeDigitAscii(2, scroll[2]);
      alpha4.writeDigitAscii(1, scroll[1]);
      alpha4.writeDigitAscii(0, scroll[0]);
      alpha4.writeDisplay();
      c = c + 1;
      delay(200);
      scroll[0] = scroll[1];
      scroll[1] = scroll[2];
      scroll[2] = scroll[3];
      scroll[3] = cleared[c];
      alpha4.writeDigitAscii(3, scroll[3]);
      alpha4.writeDigitAscii(2, scroll[2]);
      alpha4.writeDigitAscii(1, scroll[1]);
      alpha4.writeDigitAscii(0, scroll[0]);
      alpha4.writeDisplay();
      c = c + 1;
      delay(200);
      scroll[0] = scroll[1];
      scroll[1] = scroll[2];
      scroll[2] = scroll[3];
      scroll[3] = cleared[c];
      alpha4.writeDigitAscii(3, scroll[3]);
      alpha4.writeDigitAscii(2, scroll[2]);
      alpha4.writeDigitAscii(1, scroll[1]);
      alpha4.writeDigitAscii(0, scroll[0]);
      alpha4.writeDisplay();
      c = c + 1;
      delay(200);
      scroll[0] = scroll[1];
      scroll[1] = scroll[2];
      scroll[2] = scroll[3];
      scroll[3] = cleared[c];
      alpha4.writeDigitAscii(3, scroll[3]);
      alpha4.writeDigitAscii(2, scroll[2]);
      alpha4.writeDigitAscii(1, scroll[1]);
      alpha4.writeDigitAscii(0, scroll[0]);
      alpha4.writeDisplay();
      c = c + 1;
      delay(200);
      scroll[0] = scroll[1];
      scroll[1] = scroll[2];
      scroll[2] = scroll[3];
      scroll[3] = cleared[c];
      alpha4.writeDigitAscii(3, scroll[3]);
      alpha4.writeDigitAscii(2, scroll[2]);
      alpha4.writeDigitAscii(1, scroll[1]);
      alpha4.writeDigitAscii(0, scroll[0]);
      alpha4.writeDisplay();
      c = c + 1;
      delay(200);
      scroll[0] = scroll[1];
      scroll[1] = scroll[2];
      scroll[2] = scroll[3];
      scroll[3] = cleared[c];
      alpha4.writeDigitAscii(3, scroll[3]);
      alpha4.writeDigitAscii(2, scroll[2]);
      alpha4.writeDigitAscii(1, scroll[1]);
      alpha4.writeDigitAscii(0, scroll[0]);
      alpha4.writeDisplay();
      delay(200);
      input[0] = ' ';
      input[1] = ' ';
      input[2] = ' ';
      input[3] = ' ';
      scroll[0] = ' ';
      scroll[1] = ' ';
      scroll[2] = ' ';
      scroll[3] = ' ';
      alpha4.clear();
      alpha4.writeDisplay();
    }
    else if ((key == 'A') || (key == 'B') || (key == 'D') || (key == 'F')) {
      Serial.println("Error");
      alpha4.writeDigitAscii(3, 'R');
      alpha4.writeDigitAscii(2, 'R');
      alpha4.writeDigitAscii(1, 'E');
      alpha4.writeDigitRaw(0, 0x0);
      alpha4.writeDisplay();
      delay(1000);
      alpha4.clear();
      alpha4.writeDisplay();
    }
    else if (key == 'E') {
      if ((input[0] == code[0]) && (input[1] == code([1]) && (input[2] == code[2]) && (input[3] == code[3])) {
      Serial.print("Correct");
        int d = 0;
        scroll[0] = scroll[1];
        scroll[1] = scroll[2];
        scroll[2] = scroll[3];
        scroll[3] = correct[d];
        alpha4.writeDigitAscii(3, scroll[3]);
        alpha4.writeDigitAscii(2, scroll[2]);
        alpha4.writeDigitAscii(1, scroll[1]);
        alpha4.writeDigitAscii(0, scroll[0]);
        alpha4.writeDisplay();
        d = d + 1;
        delay(200);
        scroll[0] = scroll[1];
        scroll[1] = scroll[2];
        scroll[2] = scroll[3];
        scroll[3] = correct[d];
        alpha4.writeDigitAscii(3, scroll[3]);
        alpha4.writeDigitAscii(2, scroll[2]);
        alpha4.writeDigitAscii(1, scroll[1]);
        alpha4.writeDigitAscii(0, scroll[0]);
        alpha4.writeDisplay();
        d = d + 1;
        delay(200);
        scroll[0] = scroll[1];
        scroll[1] = scroll[2];
        scroll[2] = scroll[3];
        scroll[3] = correct[d];
        alpha4.writeDigitAscii(3, scroll[3]);
        alpha4.writeDigitAscii(2, scroll[2]);
        alpha4.writeDigitAscii(1, scroll[1]);
        alpha4.writeDigitAscii(0, scroll[0]);
        alpha4.writeDisplay();
        d = d + 1;
        delay(200);
        scroll[0] = scroll[1];
        scroll[1] = scroll[2];
        scroll[2] = scroll[3];
        scroll[3] = correct[d];
        alpha4.writeDigitAscii(3, scroll[3]);
        alpha4.writeDigitAscii(2, scroll[2]);
        alpha4.writeDigitAscii(1, scroll[1]);
        alpha4.writeDigitAscii(0, scroll[0]);
        alpha4.writeDisplay();
        d = d + 1;
        delay(200);
        scroll[0] = scroll[1];
        scroll[1] = scroll[2];
        scroll[2] = scroll[3];
        scroll[3] = correct[d];
        alpha4.writeDigitAscii(3, scroll[3]);
        alpha4.writeDigitAscii(2, scroll[2]);
        alpha4.writeDigitAscii(1, scroll[1]);
        alpha4.writeDigitAscii(0, scroll[0]);
        alpha4.writeDisplay();
        d = d + 1;
        delay(200);
        scroll[0] = scroll[1];
        scroll[1] = scroll[2];
        scroll[2] = scroll[3];
        scroll[3] = correct[d];
        alpha4.writeDigitAscii(3, scroll[3]);
        alpha4.writeDigitAscii(2, scroll[2]);
        alpha4.writeDigitAscii(1, scroll[1]);
        alpha4.writeDigitAscii(0, scroll[0]);
        alpha4.writeDisplay();
        d = d + 1;
        delay(200);
        scroll[0] = scroll[1];
        scroll[1] = scroll[2];
        scroll[2] = scroll[3];
        scroll[3] = correct[d];
        alpha4.writeDigitAscii(3, scroll[3]);
        alpha4.writeDigitAscii(2, scroll[2]);
        alpha4.writeDigitAscii(1, scroll[1]);
        alpha4.writeDigitAscii(0, scroll[0]);
        alpha4.writeDisplay();
        d = d + 1;
        delay(200);
        scroll[0] = scroll[1];
        scroll[1] = scroll[2];
        scroll[2] = scroll[3];
        scroll[3] = correct[d];
        alpha4.writeDigitAscii(3, scroll[3]);
        alpha4.writeDigitAscii(2, scroll[2]);
        alpha4.writeDigitAscii(1, scroll[1]);
        alpha4.writeDigitAscii(0, scroll[0]);
        alpha4.writeDisplay();
        d = d + 1;
        delay(200);
        scroll[0] = scroll[1];
        scroll[1] = scroll[2];
        scroll[2] = scroll[3];
        scroll[3] = correct[d];
        alpha4.writeDigitAscii(3, scroll[3]);
        alpha4.writeDigitAscii(2, scroll[2]);
        alpha4.writeDigitAscii(1, scroll[1]);
        alpha4.writeDigitAscii(0, scroll[0]);
        alpha4.writeDisplay();
        delay(1000);
        alpha4.clear();
        alpha4.writeDisplay();
      }
    }
  }
}

